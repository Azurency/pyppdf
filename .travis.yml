# Only build PRs or tags
# if: (type = pull_request) OR (tag IS present)

os:
#  - windows
  - linux
#  - osx

dist: focal
osx_image: xcode11.3
language: shell
services: xvfb

notifications:
  email: false

git:
  submodules: false

# Install packages
# sudo apt-get install -y libatk-bridge2.0-0 libgtk-3.0 libgbm-dev xvfb
# sudo apt-get install -y libatk-bridge2.0-0 libgtk-3.0 libgbm-dev
install:
  - _py_ver="3.8"
  - |
    if [ "$TRAVIS_OS_NAME" = 'windows' ]; then
        choco install miniconda3
        _pref="/c/tools/miniconda3"
        export PATH="$_pref:$_pref/Scripts:$_pref/condabin:$PATH"
    elif [ "$TRAVIS_OS_NAME" = 'osx' ]; then
        wget https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh
        bash miniconda.sh -b -p $HOME/miniconda
        export PATH="$HOME/miniconda/bin:$PATH"
    else
        sudo apt-get update
        sudo apt-get install -y vxfb ca-certificates fonts-liberation libappindicator3-1 libasound2 libatk-bridge2.0-0 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgbm1 libgcc1 libglib2.0-0 libgtk-3-0 libnspr4 libnss3 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 lsb-release wget xdg-utils
        sudo sysctl -w kernel.unprivileged_userns_clone=1
        wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
        bash miniconda.sh -b -p $HOME/miniconda
        export PATH="$HOME/miniconda/bin:$PATH"
    fi
  - hash -r
  - source activate base
  - conda config --set always_yes yes --set changeps1 no
  - conda config --add channels conda-forge
  - conda config --add channels defaults
  - conda update -y conda
  # Useful for debugging any issues with conda
  - conda info -a
  - |
    conda create -y -n test-env "python=$_py_ver" "pip>=10.0.1" certifi click "litereval>=0.0.9" "pyppeteer>=0.2.2" py-pandoc
  - source activate test-env
  - pip install .
  - pyppdf-install
  - pyppeteer-install

# Run test
script:
  - pyppdf --help
  - |
    if [ "$TRAVIS_OS_NAME" = 'linux' ]; then
        /home/travis/.local/share/pyppeteer/local-chromium/800217/chrome-linux/chrome
    fi
  - |
    if [ "$TRAVIS_OS_NAME" = 'linux' ]; then
        /home/travis/.local/share/pyppeteer/local-chromium/588429/chrome-linux/chrome
    fi
  - bash ./ci-test
